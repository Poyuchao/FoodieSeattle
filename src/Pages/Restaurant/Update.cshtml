@page "{id}"
@using ContosoCrafts.WebSite.Services
@inject RestaurantService _RestaurantService
@model ContosoCrafts.WebSite.Pages.Restaurant.UpdateModel

@{
    ViewData["Title"] = "Update page";
}

<p style="line-height:5.5em;"> </p>
<h1>Update</h1>

<!--CRUDi: Update page to show: Form for updating product/restaurant-->
<div class="container">
    <form method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @Html.HiddenFor(x => x.Product.Id)

        <div class="form-group">
            <label asp-for="Product.Title" class="control-label"></label>
            <input asp-for="Product.Title" class="form-control" />
            <span asp-validation-for="Product.Title" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Product.Description" class="control-label"></label>
            <input asp-for="Product.Description" class="form-control" />
            <span asp-validation-for="Product.Description" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Product.Url" class="control-label"></label>
            <input asp-for="Product.Url" class="form-control" />
            <span asp-validation-for="Product.Url" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Product.Image" class="control-label"></label>
            <input asp-for="Product.Image" class="form-control" />
            <span asp-validation-for="Product.Image" class="text-danger"></span>
        </div>
        <div class="invalid-feedback">
            Please provide an image.
        </div>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
    </div>
</form>
<p style="line-height:5.5em;"> </p>

@section Scripts {
    <script>
        //Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            //This line converts the forms NodeList into an array using the slice method and then loops over each form in the array using the forEach method.
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    //form.addEventListener('submit', function (event), the function performs form validation and stops the form from being submitted if there are validation errors.
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            //event.preventDefault() is called to prevent the form from being submitted and the page from reloading.
                            event.preventDefault()
                            // event.stopPropagation() is called inside the if statement to stop the propagation of the submit event if the form is invalid
                            event.stopPropagation()
                        } else {
                            // Add a class to the valid feedback element to show it
                            form.querySelector('.valid-feedback').classList.add('d-block');
                        }

                        //form.classList.add('was-validated') adds the was-validated class to the form element
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}
